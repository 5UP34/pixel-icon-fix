import funkin.play.song.Song;
import funkin.play.PlayState;
import funkin.Paths;
import funkin.play.cutscene.VideoCutscene;
import funkin.save.Save;

import funkin.play.PlayStatePlaylist;

class DarnellSong extends Song {
  var hasPlayedCutscene:Bool;

	public function new() {
		super('darnell');

    hasPlayedCutscene = false;
	}

	public function listDifficulties(variationId:String, variationIds:Array<String>):Array<String> {
		if (Save.instance.hasBeatenLevel('weekend1')) {
			return super.listDifficulties(variationId, variationIds);
		}

		// Hide all difficulties if the player has not beaten the week.
		return [];
	}

  public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);

    if (!PlayStatePlaylist.isStoryMode) hasPlayedCutscene = true;

    if (!hasPlayedCutscene) {
      trace('Pausing countdown to play a video cutscene (`darnell`)');

      hasPlayedCutscene = true;

      event.cancel(); // CANCEL THE COUNTDOWN!

      startVideo();
    }
	}

  function startVideo() {
    VideoCutscene.play(Paths.videos('darnellCutscene'));
  }

  /**
   * Don't replay the cutscene between restarts.
   */
  function onSongRetry(event:ScriptEvent)
  {
    super.onSongRetry(event);

    hasPlayedCutscene = true;
  }

  /**
   * Replay the cutscene after leaving the song.
   */
  function onCreate(event:ScriptEvent):Void
  {
    super.onCreate(event);

    hasPlayedCutscene = false;
  }
}
