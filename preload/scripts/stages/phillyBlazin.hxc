import funkin.graphics.shaders.GaussianBlurShader;
import flixel.FlxG;
import flixel.FlxSprite;
import flixel.util.FlxTimer;
import funkin.graphics.FunkinSprite;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import openfl.filters.ShaderFilter;

/**
 * This stage includes a partial version of the Philly Streets stage with shaders applied.
 */
class PhillyBlazinStage extends Stage
{
	function new()
	{
		super('phillyBlazin');
	}

	override function onCreate(event:ScriptEvent) {
		super.onCreate(event);
		cameraInitialized = false;
		cameraDarkened = false;
	}

	override function buildStage()
	{
		super.buildStage();
	}

	var cameraInitialized:Bool = false;
	var cameraDarkened:Bool = false;

	override function onUpdate(event:ScriptEvent)
	{
		super.onUpdate(event);

		// Darken the camera after the song starts. We need to wait an extra frame to apply to A-Bot.
		if (cameraInitialized && !cameraDarkened)
		{
			cameraDarkened = true;
			darkenCamera();
		}

		// Manually focus the camera before the song starts.
		if (!cameraInitialized && PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint != null)
		{
			cameraInitialized = true;
			initializeCamera();
		}
	}

	function initializeCamera():Void {
		var xTarget:Float = PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint.x;
    var yTarget:Float = PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint.y;
		// yTarget += 200;
		xTarget += 50;
		yTarget -= 100;
    PlayState.instance.cameraFollowPoint.setPosition(xTarget, yTarget);
		PlayState.instance.resetCamera();
	}

	// var multiplyBG:FlxRuntimeShader = null;
	// var multiplyChar:FlxRuntimeShader = null;
	var blurBG:GaussianBlurShader = null;
	var blurNene:GaussianBlurShader = null;
	var multiplySprite:FunkinSprite = null;

	function darkenCamera()
	{
		//		blurBG = new GaussianBlurShader(0.5);
		//		blurNene = new GaussianBlurShader(1.0);
		//		blurABot = new GaussianBlurShader(0.20);
		//		for (prop in this.members) {
		//			trace('Applying blur to prop: ' + prop.zIndex);
		//			// Ignore player and opponent.
		//			if (prop.zIndex >= 2000) continue;
		//
		//			// Apply the gaussian blur shader to the background prop.
		//			// Nene needs less intense blur.
		//			if (prop.zIndex >= 1000) {
		//				trace('Applying nene blur!');
		//				prop.shader = blurNene;
		//			} else if (prop.zIndex >= 990) {
		//				trace('Applying a-bot blur!');
		//				prop.shader = blurABot;
		//			} else {
		//				trace('Applying background blur!');
		//				prop.shader = blurBG;
		//			}
		//		}

		multiplySprite = new FunkinSprite(400, 0);
		multiplySprite.makeSolidColor(2000, 2500, 0xFF606060);
		multiplySprite.blend = 9; // Multiply
		multiplySprite.zIndex = 1100;
		add(multiplySprite);
		refresh();
	}
}
