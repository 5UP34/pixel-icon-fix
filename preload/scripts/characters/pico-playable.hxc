import funkin.play.character.MultiSparrowCharacter;
import funkin.play.character.CharacterType;
import funkin.play.PlayState;
import funkin.Paths;
import flixel.FlxSprite;
import flixel.FlxG;

class PicoPlayerCharacter extends MultiSparrowCharacter {
	public function new() {
		super('pico-playable');
	}

	override function onCreate(event:ScriptEvent) {
		super.onCreate(event);
	}

	var deathSpriteRetry:FlxSprite;
	var deathSpriteNene:FlxSprite;

	/**
     * Initialize and cache sprites used for the death animation,
	 * for use later.
	 */
	function createDeathSprites() {
		deathSpriteRetry = new FlxSprite(0, 0);
		deathSpriteRetry.x = this.x + 196.5;
		deathSpriteRetry.y = this.y - 85;
		deathSpriteRetry.frames = Paths.getSparrowAtlas("characters/Pico_Death_Retry_Text");
		deathSpriteRetry.animation.addByPrefix('idle', "Retry Text Loop0", 24, true);
		deathSpriteRetry.animation.addByPrefix('confirm', "Retry Text Confirm0", 24, false);

		deathSpriteRetry.visible = false;

		deathSpriteNene = new FlxSprite(0, 0);
		var gf = PlayState.instance.currentStage.getGirlfriend();
		deathSpriteNene.x = gf.originalPosition.x + 125;
		deathSpriteNene.y = gf.originalPosition.y;
		deathSpriteNene.frames = Paths.getSparrowAtlas("characters/NeneKnifeToss");
		deathSpriteNene.animation.addByPrefix('throw', "knife toss0", 24, false);
		deathSpriteNene.visible = true;
		deathSpriteNene.animation.finishCallback = function(name:String) {
			deathSpriteNene.visible = false;
		}
	}

	override function onNoteHit(event:NoteScriptEvent)
	{
		holdTimer = 0;

		if (event.note.mustPress && characterType == CharacterType.BF) {
			// Override the hit note animation.
			switch(event.note.data.noteKind) {
				case "weekend-1-cockgun":
					playCockGunAnim();
				case "weekend-1-firegun":
					playFireGunAnim();
				default:
					super.onNoteHit(event);
			}
		}
	}

	override function onNoteMiss(event:NoteScriptEvent)
	{
		// Override the miss note animation.
		switch(event.note.data.noteKind) {
			case "weekend-1-cockgun":
				// playCockMissAnim();
			case "weekend-1-firegun":
				playCanExplodeAnim();
			default:
				super.onNoteHit(event);
		}
	}

	override function playAnimation(name:String, restart:Bool, ignoreOther:Bool) {
		if (name == "firstDeath") {
			createDeathSprites();

			FlxG.state.subState.add(deathSpriteRetry);
			FlxG.state.subState.add(deathSpriteNene);
			deathSpriteNene.animation.play("throw");
		} else if (name == "deathConfirm") {
			trace(deathSpriteRetry);
			deathSpriteRetry.animation.play('confirm');
			// I think the glow makes the overall animation larger,
			// but a plain FlxSprite doesn't have an animation offset option so we do it manually.
			deathSpriteRetry.x -= 250;
			deathSpriteRetry.y -= 200;

			// Skip playing the animation.
			return;
		}
		
		super.playAnimation(name, restart, ignoreOther);
	}

	override function onSongRetry(event:ScriptEvent)
	{
		super.onSongRetry(event);
	}

	override function onAnimationFrame(name:String, frameNumber:Int, frameIndex:Int) {
		super.onAnimationFrame(name, frameNumber, frameIndex);

		if (name == "firstDeath" && frameNumber == 36 - 1) {
			deathSpriteRetry.animation.play('idle');
		}
		if (name == "firstDeath" && frameNumber == 36) {
			deathSpriteRetry.visible = true;
		}
	}

	/**
	 * Play the animation where Pico readies his gun to shoot the can.
	 */
	function playCockGunAnim() {
		this.playAnimation('cock', true, true);
		FlxG.sound.play(Paths.sound('Gun_Prep'), 1.0);
	}	
	/**
	 * Play the animation where Pico shoots the can successfully.
	 */
	function playFireGunAnim() {
		this.playAnimation('shoot', true, true);
		FlxG.sound.play(Paths.soundRandom('Shoot_', 1, 4), 1.0);
	}
	/**
	 * Play the animation where Pico is hit by the exploding can.
	 */
	function playCanExplodeAnim() {
		this.playAnimation('shootMISS', true, true);
	}
}